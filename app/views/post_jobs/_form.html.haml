= form_for @post_job, :html => { :class => 'form-horizontal', "data-validate" => "parsley", :id => "job_post_form" } do |f|
	-if @post_job.errors.any?
		#error_explanation
			%h2= "#{pluralize(@post_job.errors.count, "error")} prohibited this post_job from being saved:"
			%ul
				- @post_job.errors.full_messages.each do |msg|
					%li= msg
	= f.hidden_field :user_id, :class => 'number_field', :value=>current_user.id
	.control-group
		= f.label :job_title, "Title",:class => 'control-label'
		.controls
			= f.text_field :job_title, :class => 'text_field large-field', "data-required"=>"true", "data-rangelength"=>"[5,50]"
	.control-group
		= f.label :job_type, "Type", :class => 'control-label custom-select'
		.controls.custom-select
			= f.select(:job_type,[['Full Time',0],['Contract',1],['Contract to Hire',2]] )
	.control-group
		= f.label :job_description,"Description", :class => 'control-label'
		.controls
			= f.text_area :job_description, :class => 'text_area', :rows=>3, "data-required"=>"true", "data-rangelength"=>"[5,500]"
	.control-group
		= f.label :skill_tokens, "Require Skills",:class => 'control-label'
		.controls
			= f.text_field :skill_tokens, :class => 'text_field large-field', :id => "skill_input_box", "data-pre" => @post_job.skill_lists.map(&:attributes).to_json, "data-required"=>"true"
	.form-actions
		= link_to( '< Back ', post_main_path, :class => "m-btn" ) 
		= f.submit 'Post a Job', :class => 'm-btn blue', :id => "btn_post_create"
		= f.submit 'Preview', :class => 'm-btn', :id=>"btn_post_preview"
		= link_to t('.cancel', :default => t("helpers.links.cancel")), post_jobs_path, :class => 'm-btn'

:javascript 
	$('ul.nav-tabs li').eq(0).addClass('isCurrent');
	

//				= skill.text_field :skill_name, :class => 'text_field large-field'
//		= f.submit 'Preview', :class => 'm-btn', :id=>"btn_post_preview"
// %input#btn_post_preview{:type => "button", :vale=>"PRE" }
		
